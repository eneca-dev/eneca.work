import { useEffect, useRef } from 'react'
import { usePlanningStore } from '../stores/usePlanningStore'

/**
 * –•—É–∫ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Timeline –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–≥—Ä—É–∑–æ–∫
 * –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Ä–∞–∑–¥–µ–ª–æ–≤ –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç UI
 */
export function useTimelineAutoRefresh() {
  const prevSectionsRef = useRef<any[]>([])
  const sections = usePlanningStore((state) => state.sections)
  const loadingsMap = usePlanningStore((state) => state.loadingsMap)

  useEffect(() => {
    const currentSections = sections
    const prevSections = prevSectionsRef.current

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ—è–≤–∏–ª–∏—Å—å –ª–∏ –Ω–æ–≤—ã–µ –∑–∞–≥—Ä—É–∑–∫–∏
    let hasNewLoadings = false

    if (currentSections.length > 0 && prevSections.length > 0) {
      currentSections.forEach((currentSection, index) => {
        const prevSection = prevSections[index]
        
        if (prevSection && currentSection.id === prevSection.id) {
          const currentLoadingsCount = currentSection.loadings?.length || 0
          const prevLoadingsCount = prevSection.loadings?.length || 0
          
          if (currentLoadingsCount > prevLoadingsCount) {
            hasNewLoadings = true
            console.log(`üÜï –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –Ω–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –≤ —Ä–∞–∑–¥–µ–ª–µ ${currentSection.name}:`, {
              prevCount: prevLoadingsCount,
              currentCount: currentLoadingsCount,
              sectionId: currentSection.id
            })
          }
        }
      })
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º reference –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    prevSectionsRef.current = currentSections.map(section => ({
      ...section,
      loadings: [...(section.loadings || [])]
    }))

    if (hasNewLoadings) {
      console.log('üîÑ Timeline –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω –∏–∑-–∑–∞ –Ω–æ–≤—ã—Ö –∑–∞–≥—Ä—É–∑–æ–∫')
    }
  }, [sections, loadingsMap])

  return {
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –µ—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è
    forceRefresh: () => {
      console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ Timeline')
      // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É –µ—Å–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è
    }
  }
}