"use client" 
import { Loader2 } from "lucide-react"
// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç–æ—Ä—ã –Ω–∞–ø—Ä—è–º—É—é –∏–∑ –∏—Ö —Ñ–∞–π–ª–æ–≤
import { usePlanningStore } from "../stores/usePlanningStore"
// –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ä—ã–π —Å—Ç–æ—Ä —Ñ–∏–ª—å—Ç—Ä–æ–≤ –Ω–∞ –Ω–æ–≤—ã–π
import { useFilterStore } from "../filters/store"
import { usePlanningViewStore } from "../stores/usePlanningViewStore"
import { useUserStore } from "@/stores/useUserStore"
import { useUiStore } from "@/stores/useUiStore"
import { useEffect, useRef, useState } from "react"
import { cn } from "@/lib/utils"
import { TimelineGrid } from "./timeline-grid"
import { getFiltersPermissionContextAsync } from "@/modules/permissions/integration/filters-permission-context"
import * as Sentry from "@sentry/nextjs"
import { TimelineHeaderTabs } from "./timeline/timeline-header-tabs"
import { useTheme } from "next-themes"
import { useSettingsStore } from "@/stores/useSettingsStore"
import { ColumnVisibilityMenu } from "./timeline/column-visibility-menu"
import { PermissionBadge } from "./permission-badge"
import { Button } from "@/components/ui/button"
import { SectionPanel } from "@/components/modals"
import { useTimelineAutoRefresh } from "../hooks/useTimelineAutoRefresh"
import { Pagination } from "./pagination"

export function TimelineView() {
  // –ü–æ–ª—É—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –¥–µ–π—Å—Ç–≤–∏—è –∏–∑ –Ω–æ–≤–æ–≥–æ —Å—Ç–æ—Ä–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const {
    selectedProjectId,
    selectedDepartmentId,
    selectedTeamId,
    selectedEmployeeId,
    selectedManagerId,
    selectedStageId,
    selectedObjectId,
    resetFilters,
  } = useFilterStore()

  const {
    sections,
    allSections,
    departments,
    isLoadingSections,
    isLoadingDepartments,
    fetchSections,
    fetchDepartments,
    setFilters,
    expandedSections,
    expandedDepartments,
    toggleSectionExpanded,
    toggleDepartmentExpanded,
    expandAllSections,
    collapseAllSections,
    expandAllDepartments,
    collapseAllDepartments,
    toggleShowDepartments,
    showSections,
    showDepartments,
    currentPage,
    sectionsPerPage,
    setCurrentPage,
  } = usePlanningStore()

  const {
    activeTab,
    setActiveTab,
    startDate,
    daysToShow,
    setStartDate,
    setDaysToShow,
    scrollForward,
    scrollBackward,
    cellWidth, // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è
  } = usePlanningViewStore()

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ 180 –¥–Ω–µ–π –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
useEffect(() => {
   // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ 180 –¥–Ω–µ–π –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
   if (daysToShow !== 180) {
     setDaysToShow(180)
   }
 
   // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ startDate —è–≤–ª—è–µ—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º –æ–±—ä–µ–∫—Ç–æ–º Date
   if (!(startDate instanceof Date) || isNaN(startDate.getTime())) {
    setStartDate(new Date())
   }
}, []) // Run only on mount

  // –ü—Ä–∏–º–µ–Ω—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –ø—Ä–∞–≤–∞–º –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    getFiltersPermissionContextAsync()
      .then(() => {
        // –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω—ã
      })
      .catch((err) => {
        Sentry.captureException(err)
        console.error('Failed to init filter permissions context', err)
      })
  }, [])

  // TODO: –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É permissions –∏–∑ @/modules/permissions
  // const { permissions } = useUserStore() // –£–¥–∞–ª–µ–Ω–æ - permissions –±–æ–ª—å—à–µ –Ω–µ—Ç –≤ userStore

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–º—É –∏–∑ useSettingsStore
  const { theme: storeTheme } = useSettingsStore()
  const { resolvedTheme } = useTheme()
  const theme = storeTheme === "system" ? resolvedTheme || "light" : storeTheme

  const { setLoading } = useUiStore()

  // –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è —à–∏—Ä–∏–Ω—ã
  const containerRef = useRef<HTMLDivElement>(null)

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
  const [windowSize, setWindowSize] = useState({
    width: typeof window !== "undefined" ? window.innerWidth : 0,
    height: typeof window !== "undefined" ? window.innerHeight : 0,
  })

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è SectionPanel
  const [showSectionPanel, setShowSectionPanel] = useState(false)
  const [selectedSectionId, setSelectedSectionId] = useState<string | null>(null)
  const [initialSectionTab, setInitialSectionTab] = useState<'overview' | 'comments' | 'decomposition' | 'tasks' | 'reports' | 'loadings'>('overview')

  // –°—á–µ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
  const [refreshCounter, setRefreshCounter] = useState(0)

  // –•—É–∫ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è timeline
  const { forceRefresh } = useTimelineAutoRefresh()

  // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const activeFiltersCount = [
    selectedProjectId, 
    selectedDepartmentId, 
    selectedTeamId, 
    selectedEmployeeId,
    selectedManagerId,
    selectedStageId,
    selectedObjectId
  ].filter(Boolean).length

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
  const hasActiveFilters = activeFiltersCount > 0

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã –∏ –æ—Ç–¥–µ–ª—ã –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    fetchSections()
  }, [fetchSections])

  // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –ø—Ä–∏ –∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∏–ª–∏ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–¥ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤
    setLoading(true)

    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –∏–∑ –Ω–æ–≤–æ–≥–æ —Å—Ç–æ—Ä–∞
    setFilters(selectedProjectId, selectedDepartmentId, selectedTeamId, selectedManagerId, selectedEmployeeId, selectedStageId, selectedObjectId)

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å–ª–µ –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏
    const timer = setTimeout(() => setLoading(false), 300)
    return () => clearTimeout(timer)
  }, [selectedProjectId, selectedDepartmentId, selectedTeamId, selectedEmployeeId, selectedManagerId, selectedStageId, selectedObjectId, setFilters, setLoading])

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
  useEffect(() => {
    console.log("üîÑ –§–∏–ª—å—Ç—Ä—ã –∏–∑–º–µ–Ω–∏–ª–∏—Å—å, –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ:", {
      selectedStageId,
      selectedObjectId,
      selectedProjectId,
      selectedDepartmentId,
      selectedTeamId,
      selectedEmployeeId,
      selectedManagerId
    })
    
    // –í—ã–∑—ã–≤–∞–µ–º fetchSections –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    if (selectedProjectId || selectedDepartmentId || selectedTeamId || selectedEmployeeId || selectedManagerId || selectedStageId || selectedObjectId) {
      fetchSections()
    }
  }, [selectedStageId, selectedObjectId, selectedEmployeeId, fetchSections])

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Ç–¥–µ–ª—ã –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ showDepartments
  useEffect(() => {
    if (showDepartments && departments.length === 0) {
      fetchDepartments()
    }
  }, [showDepartments, departments.length, fetchDepartments])

  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
  useEffect(() => {
    const handleResize = () => {
      setWindowSize({
        width: window.innerWidth,
        height: window.innerHeight,
      })
    }

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å —Å–æ–±—ã—Ç–∏—è resize
    window.addEventListener("resize", handleResize)

    // –í—ã–∑—ã–≤–∞–µ–º handleResize —Å—Ä–∞–∑—É –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    handleResize()

    // –û—á–∏—â–∞–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    return () => window.removeEventListener("resize", handleResize)
  }, [])

  // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å—Ç–æ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  useEffect(() => {
    let previousState = {
      sectionsLength: usePlanningStore.getState().sections.length,
      loadingsMapSize: Object.keys(usePlanningStore.getState().loadingsMap).length,
      totalLoadings: Object.values(usePlanningStore.getState().loadingsMap).reduce((sum, loadings) => sum + loadings.length, 0)
    }

    const unsubscribe = usePlanningStore.subscribe((state) => {
      const current = {
        sectionsLength: state.sections.length,
        loadingsMapSize: Object.keys(state.loadingsMap).length,
        totalLoadings: Object.values(state.loadingsMap).reduce((sum, loadings) => sum + loadings.length, 0)
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Ä–µ–∞–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –¥–∞–Ω–Ω—ã—Ö
      if (
        current.sectionsLength !== previousState.sectionsLength ||
        current.loadingsMapSize !== previousState.loadingsMapSize ||
        current.totalLoadings !== previousState.totalLoadings
      ) {
        console.log("üìä –î–∞–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å, –æ–±–Ω–æ–≤–ª—è–µ–º Timeline:", {
          sections: current.sectionsLength,
          loadingsMap: current.loadingsMapSize,
          totalLoadings: current.totalLoadings
        })
        setRefreshCounter(prev => prev + 1)
        previousState = current
      }
    })

    return unsubscribe
  }, [])

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const handleProjectChange = (projectId: string | null) => {
    console.log("–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:", projectId)
    // –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  }

  const handleDepartmentChange = (departmentId: string | null) => {
    console.log("–ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ—Ç–¥–µ–ª–∞:", departmentId)
    // –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  }

  const handleTeamChange = (teamId: string | null) => {
    console.log("–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã:", teamId)
    // –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  }

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
 const handleManagerChange = (managerId: string | null) => {
   console.log("–ò–∑–º–µ–Ω–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞:", managerId)
   // –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ
 }

  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —ç—Ç–∞–ø–æ–≤
  const handleStageChange = (stageId: string | null) => {
    console.log("–ò–∑–º–µ–Ω–µ–Ω–∏–µ —ç—Ç–∞–ø–∞:", stageId)
    // –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ–±—ä–µ–∫—Ç–æ–≤
  const handleObjectChange = (objectId: string | null) => {
    console.log("–ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞:", objectId)
    // –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
  const handleEmployeeChange = (employeeId: string | null) => {
    console.log("–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞:", employeeId)
    // –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  }

  const handleResetFilters = () => {
    console.log("–°–±—Ä–æ—Å —Ñ–∏–ª—å—Ç—Ä–æ–≤")
    resetFilters()
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–∫—Ä—ã—Ç–∏—è SectionPanel
  const handleOpenSectionPanel = (sectionId: string, initialTab: 'overview' | 'comments' | 'decomposition' | 'tasks' | 'reports' | 'loadings' = 'overview') => {
    setSelectedSectionId(sectionId)
    setInitialSectionTab(initialTab)
    setShowSectionPanel(true)
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è SectionPanel
  const handleCloseSectionPanel = () => {
    setShowSectionPanel(false)
    setSelectedSectionId(null)
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞  
  const handleShowGuide = () => {
    // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω–∞ –∏–∑ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    if (typeof window !== 'undefined') {
      window.dispatchEvent(new CustomEvent('showPlanningGuide'))
    }
  }


 const handleTodayPeriod = () => {
   const today = new Date()
   // –û—Ç—Å—Ç—É–ø–∞–µ–º –Ω–∞ 30 –¥–Ω–µ–π –Ω–∞–∑–∞–¥ –æ—Ç —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã
   today.setDate(today.getDate() - 30)
   setStartDate(today)
 }

  // –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü
  const totalPages = Math.ceil(allSections.length / Math.max(sectionsPerPage, 1))

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  const handlePageChange = (page: number) => {
    // –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–¥–≥—Ä—É–∂–∞–µ–º –æ—Ç–¥–µ–ª—ã, –µ—Å–ª–∏ –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–∫–∞–∑–∞–Ω—ã
    setCurrentPage(page)
    if (showDepartments) {
      fetchDepartments()
    }
  }

  useEffect(() => {
    // –ï—Å–ª–∏ –æ—Ç–¥–µ–ª—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–∫–∞–∑–∞–Ω—ã, –Ω–æ –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –∑–∞–≥—Ä—É–∂–∞–µ–º –∏—Ö
    if (showDepartments && departments.length === 0 && !isLoadingDepartments) {
      fetchDepartments()
    }
  }, [showDepartments, departments.length, isLoadingDepartments, fetchDepartments])

  return (
    <div
      className={cn(
        "font-sans overflow-x-hidden px-0",
      )}
      ref={containerRef}
    >
      {/* Header with improved styling */}
      <header className="flex justify-between items-center">
        <TimelineHeaderTabs
          theme={theme}
          activeTab={activeTab}
          onTabChange={setActiveTab}
          onTodayClick={handleTodayPeriod}
        />
      </header>

      {/* –°—Ç–∞—Ä–∞—è –ø–∞–Ω–µ–ª—å —Ñ–∏–ª—å—Ç—Ä–æ–≤ —É–¥–∞–ª–µ–Ω–∞ ‚Äî —Ñ–∏–ª—å—Ç—Ä—ã –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã –≤ –≤–µ—Ä—Ö–Ω–∏–π –±–∞—Ä */}

      {/* Main content area with improved styling - new approach with fixed columns */}
      <div
        className={cn(
          "w-full overflow-hidden relative overflow-y-auto",
          theme === "dark" ? "bg-slate-900" : "bg-white",
        )}
        style={{ 
          height: "calc(100vh - (var(--topbar-height,60px)))",
          borderCollapse: "collapse" 
        }}
      >
        {isLoadingSections ? (
          <div className="flex justify-center items-center p-8">
            <Loader2 className={cn("h-8 w-8 animate-spin", "text-teal-500")} />
          </div>
        ) : (
          <>
            <div className="relative w-full overflow-x-auto" style={{ borderCollapse: "collapse" }}>
              <TimelineGrid
                sections={sections}
                departments={departments}
                showSections={showSections}
                showDepartments={showDepartments}
                startDate={startDate}
                daysToShow={daysToShow}
                theme={theme}
                isLoading={isLoadingSections}
                isLoadingDepartments={isLoadingDepartments}
                enableShadow={true}
                useAbsoluteColumns={false}
                cellWidth={22}
                windowWidth={windowSize.width}
                hasActiveFilters={hasActiveFilters}
                onOpenSectionPanel={handleOpenSectionPanel}
                expandAllDepartments={expandAllDepartments}
                collapseAllDepartments={collapseAllDepartments}
                refreshCounter={refreshCounter}
              />
            </div>

            {/* –ü–∞–≥–∏–Ω–∞—Ü–∏—è –≤ —Å–∞–º–æ–º –Ω–∏–∑—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
            {totalPages > 1 && (
              <div
                className={cn(
                  "flex justify-center items-center py-4 border-t",
                  theme === "dark" ? "bg-slate-900 border-slate-700" : "bg-white border-slate-200"
                )}
              >
                <Pagination
                  currentPage={currentPage}
                  totalPages={totalPages}
                  onPageChange={handlePageChange}
                  theme={theme}
                />
              </div>
            )}
          </>
        )}
      </div>



      {/* –ü–∞–Ω–µ–ª—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–∞–∑–¥–µ–ª–µ */}
      {showSectionPanel && selectedSectionId && (
        <SectionPanel
          isOpen={showSectionPanel}
          onClose={handleCloseSectionPanel}
          sectionId={selectedSectionId}
          initialTab={initialSectionTab}
        />
      )}
    </div>
  )
}
