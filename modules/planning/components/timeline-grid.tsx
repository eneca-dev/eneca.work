"use client"

import { useMemo, useRef, useEffect } from "react"
import { cn } from "@/lib/utils"
import type { Section, Department } from "../types"
import { useSettingsStore } from "@/stores/useSettingsStore"
import { useTheme } from "next-themes"
import { generateTimeUnits } from "../utils/date-utils"
import { TimelineHeader } from "./timeline/timeline-header"
import { TimelineRow } from "./timeline/timeline-row"
import { DepartmentRow } from "./timeline/department-row" // –ù–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–¥–µ–ª–æ–≤
import { ScrollbarStyles } from "./timeline/scrollbar-styles"
import { usePlanningColumnsStore } from "../stores/usePlanningColumnsStore"
import { usePlanningStore } from "../stores/usePlanningStore"
import { ChevronDown, ChevronRight } from "lucide-react"


// –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å TimelineGridProps, –¥–æ–±–∞–≤–ª—è—è –æ—Ç–¥–µ–ª—ã
interface TimelineGridProps {
  sections: Section[]
  departments: Department[] // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–¥–µ–ª—ã
  showSections: boolean // –§–ª–∞–≥ –¥–ª—è –ø–æ–∫–∞–∑–∞/—Å–∫—Ä—ã—Ç–∏—è —Ä–∞–∑–¥–µ–ª–æ–≤
  showDepartments: boolean // –§–ª–∞–≥ –¥–ª—è –ø–æ–∫–∞–∑–∞/—Å–∫—Ä—ã—Ç–∏—è –æ—Ç–¥–µ–ª–æ–≤
  startDate: Date
  daysToShow: number
  theme?: string // –î–µ–ª–∞–µ–º –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º, –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å useSettingsStore –µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ
  isLoading: boolean
  isLoadingDepartments: boolean // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–¥–µ–ª–æ–≤
  enableShadow?: boolean
  useAbsoluteColumns?: boolean
  cellWidth?: number
  windowWidth?: number // –î–æ–±–∞–≤–ª—è–µ–º —à–∏—Ä–∏–Ω—É –æ–∫–Ω–∞ –¥–ª—è –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∏
  hasActiveFilters?: boolean // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ–ø—Å
  onOpenSectionPanel?: (sectionId: string) => void // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–∞–Ω–µ–ª–∏ —Ä–∞–∑–¥–µ–ª–∞
  expandAllDepartments: () => void
  collapseAllDepartments: () => void
  refreshCounter?: number // –î–æ–±–∞–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–µ–∑ —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
}

export function TimelineGrid({
  sections,
  departments,
  showSections,
  showDepartments,
  startDate,
  daysToShow,
  theme: propTheme, // –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä
  isLoading,
  isLoadingDepartments,
  enableShadow,
  useAbsoluteColumns = true, // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º true –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  cellWidth = 22,
  windowWidth = 0, // –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  hasActiveFilters = false, // –î–æ–±–∞–≤–ª—è–µ–º —Å –∑–Ω–∞—á–µ–Ω–∏–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  onOpenSectionPanel, // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–∞–Ω–µ–ª–∏ —Ä–∞–∑–¥–µ–ª–∞
  expandAllDepartments,
  collapseAllDepartments,
  refreshCounter = 0, // –î–æ–±–∞–≤–ª—è–µ–º —Å –∑–Ω–∞—á–µ–Ω–∏–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
}: TimelineGridProps) {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–º—É –∏–∑ useSettingsStore, –µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–∞ —á–µ—Ä–µ–∑ props
  const { theme: settingsTheme } = useSettingsStore()
  const { resolvedTheme } = useTheme()
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—É—é —Ç–µ–º—É
  const getEffectiveTheme = (resolvedTheme: string | null) => {
    if (settingsTheme === 'system') {
      return resolvedTheme === 'dark' ? 'dark' : 'light'
    }
    return settingsTheme
  }
  
  const theme = propTheme || getEffectiveTheme(resolvedTheme || null)

  // –ü–æ–ª—É—á–∞–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å —Å—Ç–æ–ª–±—Ü–æ–≤ –∏–∑ —Å—Ç–æ—Ä–∞
  const { columnVisibility } = usePlanningColumnsStore()

  // –ü–æ–ª—É—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è —Ä–∞–∑–¥–µ–ª–æ–≤ –∏ –æ—Ç–¥–µ–ª–æ–≤
  const expandedSections = usePlanningStore((state) => state.expandedSections)
  const expandedDepartments = usePlanningStore((state) => state.expandedDepartments)
  const groupByProject = usePlanningStore((state) => state.groupByProject)
  const expandedProjectGroups = usePlanningStore((state) => state.expandedProjectGroups)
  const toggleProjectGroup = usePlanningStore((state) => state.toggleProjectGroup)
  
  // –ü–æ–ª—É—á–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏
  const toggleShowSections = usePlanningStore((state) => state.toggleShowSections)
  const toggleShowDepartments = usePlanningStore((state) => state.toggleShowDepartments)

  // –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Ä–∞–∑–º–µ—Ä–æ–≤ –∏ –æ—Ç—Å—Ç—É–ø–æ–≤
  const ROW_HEIGHT = 60 // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—ã—Å–æ—Ç—É —Å—Ç—Ä–æ–∫–∏ –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
  const HEADER_HEIGHT = 40 // –í—ã—Å–æ—Ç–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞
  const PADDING = 12 // –ï–¥–∏–Ω—ã–π –æ—Ç—Å—Ç—É–ø –¥–ª—è –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  const LEFT_OFFSET = 0 // –°–º–µ—â–µ–Ω–∏–µ –≤–ª–µ–≤–æ –Ω–∞ 105px
  const DIVIDER_HEIGHT = 32 // –£–º–µ–Ω—å—à–µ–Ω–Ω–∞—è –≤—ã—Å–æ—Ç–∞ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è –º–µ–∂–¥—É —Ä–∞–∑–¥–µ–ª–∞–º–∏ –∏ –æ—Ç–¥–µ–ª–∞–º–∏ (–±—ã–ª–æ 48)

  // –ö–∞–Ω–æ–Ω–∏—á–µ—Å–∫–∏–µ —à–∏—Ä–∏–Ω—ã –∫–æ–ª–æ–Ω–æ–∫ - –µ–¥–∏–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –∏—Å—Ç–∏–Ω—ã
  const COLUMN_WIDTHS = {
    section: 430,  // –®–∏—Ä–∏–Ω–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ (—É–º–µ–Ω—å—à–µ–Ω–∞ –Ω–∞ 10px)
    project: 170,  // –®–∏—Ä–∏–Ω–∞ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ (—É–≤–µ–ª–∏—á–µ–Ω–∞ –Ω–∞ 10px)
    object: 120,   // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∏—Ä–∏–Ω–∞ –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ (—Å–∫—Ä—ã—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
    stage: 80,     // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∏—Ä–∏–Ω–∞ –¥–ª—è —Å—Ç–∞–¥–∏–∏
  } as const

  // –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ç–∞–π–º–ª–∞–π–Ω–∞
  const timelineContainerRef = useRef<HTMLDivElement>(null)

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ –¥–∞—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const timeUnits = useMemo(() => {
    return generateTimeUnits(startDate, daysToShow)
  }, [startDate, daysToShow])

  // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∏–ª—å –¥–ª—è —Ç–µ–Ω–∏ –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ (–¥–µ–ª–∞–µ–º –µ–≥–æ –±–æ–ª–µ–µ –∑–∞–º–µ—Ç–Ω—ã–º)
  const stickyColumnShadow = ""

  // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
  useEffect(() => {
    if (timelineContainerRef.current) {
      // –§–æ—Ä—Å–∏—Ä—É–µ–º –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫—É, –æ–±–Ω–æ–≤–ª—è—è —Å—Ç–∏–ª—å
      const container = timelineContainerRef.current
      const currentWidth = container.style.width
      container.style.width = `${Number.parseInt(currentWidth || "100%") - 1}px`

      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—É—é —à–∏—Ä–∏–Ω—É –≤ —Å–ª–µ–¥—É—é—â–µ–º –∫–∞–¥—Ä–µ
      requestAnimationFrame(() => {
        container.style.width = currentWidth
      })
    }
  }, [windowWidth, columnVisibility]) // –î–æ–±–∞–≤–ª—è–µ–º columnVisibility –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å—Ç–æ–ª–±—Ü–æ–≤

  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –¥–∞–Ω–Ω—ã—Ö –±–µ–∑ —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  useEffect(() => {
    if (refreshCounter > 0) {
      console.log("üîÑ Timeline Grid –æ–±–Ω–æ–≤–ª–µ–Ω (–±–µ–∑ —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è):", refreshCounter)
    }
  }, [refreshCounter])

  // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â—É—é —à–∏—Ä–∏–Ω—É —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤
  const totalFixedWidth = useMemo(() => {
    return (
      COLUMN_WIDTHS.section + 
      (columnVisibility.project ? COLUMN_WIDTHS.project : 0) + 
      (columnVisibility.object ? COLUMN_WIDTHS.object : 0)
      // –£–±–∏—Ä–∞–µ–º –æ—Ç—Å—é–¥–∞ stage, startDate, endDate –∏ sectionResponsible, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∏ —Ç–µ–ø–µ—Ä—å –≤ —è—á–µ–π–∫–µ —Ä–∞–∑–¥–µ–ª–∞
    )
  }, [columnVisibility.project, columnVisibility.object])

  // –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â—É—é —à–∏—Ä–∏–Ω—É —Ç–∞–±–ª–∏—Ü—ã
  const totalWidth = useMemo(() => {
    return totalFixedWidth + cellWidth * daysToShow
  }, [totalFixedWidth, cellWidth, daysToShow])

  // –í—ã—á–∏—Å–ª—è–µ–º —É–º–µ–Ω—å—à–µ–Ω–Ω—É—é –≤—ã—Å–æ—Ç—É —Å—Ç—Ä–æ–∫–∏ (–ø—Ä–∏–º–µ—Ä–Ω–æ –Ω–∞ 25%)
  const reducedRowHeight = Math.floor(ROW_HEIGHT * 0.75)

  // –í—ã—á–∏—Å–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫ (—ç—Ç–∞–ø—ã + –∑–∞–≥—Ä—É–∑–∫–∏) –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞
  const loadingCounts = useMemo(() => {
    const counts: Record<string, number> = {}
    sections.forEach((section) => {
      if (expandedSections[section.id]) {
        const loadingsCount = section.loadings ? section.loadings.length : 0
        const plannedCount = (section as any).plannedLoadings ? (section as any).plannedLoadings.length : 0
        const stagesCount = section.decompositionStages ? section.decompositionStages.length : 0
        counts[section.id] = loadingsCount + plannedCount + stagesCount
      } else {
        counts[section.id] = 0
      }
    })
    return counts
  }, [sections, expandedSections])

  // –í—ã—á–∏—Å–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ—Ç–¥–µ–ª–∞
  const employeeCounts = useMemo(() => {
    const counts: Record<string, number> = {}
    departments.forEach((department) => {
      if (expandedDepartments[department.id]) {
        // –°—á–∏—Ç–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≤–æ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥–∞—Ö –æ—Ç–¥–µ–ª–∞
        counts[department.id] = department.teams.reduce((sum, team) => sum + team.employees.length, 0)
      } else {
        counts[department.id] = 0
      }
    })
    return counts
  }, [departments, expandedDepartments])

  // –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫ –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º —Ä–∞–∑–¥–µ–ª–æ–º (—ç—Ç–∞–ø—ã + –∑–∞–≥—Ä—É–∑–∫–∏)
  const loadingsBeforeSection = useMemo(() => {
    const counts: Record<number, number> = {}
    let totalLoadings = 0

    sections.forEach((section, index) => {
      counts[index] = totalLoadings
      if (expandedSections[section.id]) {
        const loadingsCount = section.loadings ? section.loadings.length : 0
        const plannedCount = (section as any).plannedLoadings ? (section as any).plannedLoadings.length : 0
        const stagesCount = section.decompositionStages ? section.decompositionStages.length : 0
        totalLoadings += loadingsCount + plannedCount + stagesCount
      }
    })

    return counts
  }, [sections, expandedSections])

  // –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º –æ—Ç–¥–µ–ª–æ–º
  const employeesBeforeDepartment = useMemo(() => {
    const counts: Record<number, number> = {}
    let totalEmployees = 0

    departments.forEach((department, index) => {
      counts[index] = totalEmployees
      if (expandedDepartments[department.id]) {
        totalEmployees += department.teams.reduce((sum, team) => sum + team.employees.length, 0)
      }
    })

    return counts
  }, [departments, expandedDepartments])

  // –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞—Å–∫—Ä—ã—Ç—ã—Ö —Ä–∞–∑–¥–µ–ª–æ–≤
  const totalExpandedSections = useMemo(() => {
    return Object.keys(expandedSections).filter((id) => expandedSections[id]).length
  }, [expandedSections])

  // –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞—Å–∫—Ä—ã—Ç—ã—Ö –æ—Ç–¥–µ–ª–æ–≤
  const totalExpandedDepartments = useMemo(() => {
    return Object.keys(expandedDepartments).filter((id) => expandedDepartments[id]).length
  }, [expandedDepartments])

  // –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â—É—é –≤—ã—Å–æ—Ç—É –¥–ª—è —Ä–∞–∑–¥–µ–ª–æ–≤ –∏ –∏—Ö –∑–∞–≥—Ä—É–∑–æ–∫
  const sectionsHeight = useMemo(() => {
    return (
      sections.length * ROW_HEIGHT +
      Object.values(loadingCounts).reduce((sum, count) => sum + count * reducedRowHeight, 0)
    )
  }, [sections.length, ROW_HEIGHT, loadingCounts, reducedRowHeight])

  // –í—ã—á–∏—Å–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é —Å—Ç—Ä–æ–∫–∏ –æ—Ç–¥–µ–ª–∞ —Å —É—á–µ—Ç–æ–º –∑–∞–≥—Ä—É–∑–æ–∫ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Ä–∞–∑–¥–µ–ª–æ–≤ –∏ –≤—ã—Å–æ—Ç—ã —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è
  const departmentPosition = useMemo(() => {
    if (sections.length === 0) {
      return HEADER_HEIGHT * 2 // –ï—Å–ª–∏ –Ω–µ—Ç —Ä–∞–∑–¥–µ–ª–æ–≤, —Ä–∞–∑–º–µ—â–∞–µ–º —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞
    }

    // –ò–Ω–∞—á–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –ø–æ—Å–ª–µ –≤—Å–µ—Ö —Ä–∞–∑–¥–µ–ª–æ–≤ –∏ –∏—Ö –∑–∞–≥—Ä—É–∑–æ–∫ + –≤—ã—Å–æ—Ç–∞ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è
    return (
      HEADER_HEIGHT * 2 +
      sections.length * ROW_HEIGHT +
      Object.values(loadingCounts).reduce((sum, count) => sum + count * reducedRowHeight, 0) +
      (showDepartments && departments.length > 0 ? DIVIDER_HEIGHT : 0)
    )
  }, [
    HEADER_HEIGHT,
    sections.length,
    ROW_HEIGHT,
    loadingCounts,
    reducedRowHeight,
    showDepartments,
    departments.length,
    DIVIDER_HEIGHT,
  ])

  // –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â—É—é –≤—ã—Å–æ—Ç—É –¥–ª—è –æ—Ç–¥–µ–ª–æ–≤ –∏ –∏—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å —É—á–µ—Ç–æ–º –æ—Ç—Å—Ç—É–ø–∞ –ø–æ—Å–ª–µ —Ä–∞–∑–¥–µ–ª–æ–≤
  const departmentsHeight = useMemo(() => {
    if (!showDepartments || departments.length === 0) return 0

    return (
      departments.length * ROW_HEIGHT +
      Object.values(employeeCounts).reduce((sum, count) => sum + count * reducedRowHeight, 0)
    )
  }, [showDepartments, departments.length, ROW_HEIGHT, employeeCounts, reducedRowHeight])

  return (
    <div
      className="w-full overflow-x-auto scrollbar-thin"
      ref={timelineContainerRef}
      style={{
        scrollbarWidth: "thin" /* Firefox */,
        scrollbarColor:
          theme === "dark"
            ? "rgba(51, 65, 85, 0.5) rgba(30, 41, 59, 0.2)"
            : "rgba(203, 213, 225, 0.5) rgba(241, 245, 249, 0.2)" /* Firefox */,
        borderCollapse: "collapse" /* –î–æ–±–∞–≤–ª—è–µ–º –¥–ª—è –ª—É—á—à–µ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥—Ä–∞–Ω–∏—Ü */,
        minWidth: "100%" /* –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –±—É–¥–µ—Ç –º–µ–Ω—å—à–µ 100% —à–∏—Ä–∏–Ω—ã */,
      }}
    >
      <ScrollbarStyles theme={theme} />
      <div className="w-full" style={{ minWidth: `${totalWidth}px` }}>
        <div style={{ borderCollapse: "collapse" }}>
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞–±–ª–∏—Ü—ã */}
          <TimelineHeader
            timeUnits={timeUnits}
            theme={theme}
            headerHeight={HEADER_HEIGHT}
            columnWidth={COLUMN_WIDTHS.section}
            padding={PADDING}
            leftOffset={LEFT_OFFSET}
            cellWidth={cellWidth}
            stickyColumnShadow={stickyColumnShadow}
            showDepartments={showDepartments}
            showSections={showSections}
            toggleShowSections={toggleShowSections}
            toggleShowDepartments={toggleShowDepartments}
            expandAllDepartments={expandAllDepartments}
            collapseAllDepartments={collapseAllDepartments}
          />

          {/* –°—Ç—Ä–æ–∫–∏ —Å —Ä–∞–∑–¥–µ–ª–∞–º–∏ (–≤–æ–∑–º–æ–∂–Ω–∞ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –ø—Ä–æ–µ–∫—Ç–∞–º) */}
          {showSections && (!groupByProject ? (
            sections.map((section, index) => (
              <TimelineRow
                key={section.id}
                section={section}
                sectionIndex={index}
                timeUnits={timeUnits}
                theme={theme}
                rowHeight={ROW_HEIGHT}
                headerHeight={HEADER_HEIGHT}
                columnWidth={COLUMN_WIDTHS.section}
                padding={PADDING}
                leftOffset={LEFT_OFFSET}
                cellWidth={cellWidth}
                stickyColumnShadow={stickyColumnShadow}
                totalExpandedSections={totalExpandedSections}
                totalLoadingsBeforeSection={loadingsBeforeSection[index] || 0}
                onOpenSectionPanel={onOpenSectionPanel}
              />
            ))
          ) : (
            // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –ø—Ä–æ–µ–∫—Ç–∞
            Object.entries(
              sections.reduce((acc, s) => {
                const key = s.projectName || "–ë–µ–∑ –ø—Ä–æ–µ–∫—Ç–∞"
                if (!acc[key]) acc[key] = [] as typeof sections
                acc[key].push(s)
                return acc
              }, {} as Record<string, typeof sections>)
            ).sort((a, b) => a[0].localeCompare(b[0])).map(([projectName, projectSections]) => (
              <div key={projectName}>
                {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≥—Ä—É–ø–ø—ã –ø—Ä–æ–µ–∫—Ç–∞ */}
                <div
                  className={cn(
                    "sticky left-0 z-10 flex items-center font-semibold border-b cursor-pointer select-none",
                    theme === "dark" ? "bg-slate-900 border-slate-700" : "bg-slate-50 border-slate-200"
                  )}
                  style={{ height: `${HEADER_HEIGHT}px` }}
                  onClick={() => toggleProjectGroup(projectName)}
                >
                  <div
                    className={cn(
                      "border-r flex items-center",
                      theme === "dark" ? "border-slate-700" : "border-slate-200"
                    )}
                    style={{
                      width: `${totalFixedWidth}px`,
                      minWidth: `${totalFixedWidth}px`,
                      padding: `${PADDING}px`,
                    }}
                  >
                    <span className="mr-2">
                      {expandedProjectGroups[projectName] ? (
                        <ChevronDown className={cn("h-4 w-4", theme === "dark" ? "text-slate-300" : "text-slate-600")} />
                      ) : (
                        <ChevronRight className={cn("h-4 w-4", theme === "dark" ? "text-slate-300" : "text-slate-600")} />
                      )}
                    </span>
                    <span className={cn("text-sm", theme === "dark" ? "text-slate-200" : "text-slate-800")}>{projectName}</span>
                  </div>
                  {/* –ó–∞–ø–æ–ª–Ω–∏—Ç–µ–ª—å –¥–ª—è –ø—Ä–∞–≤–æ–π —á–∞—Å—Ç–∏, —á—Ç–æ–±—ã –≤—ã—Ä–æ–≤–Ω—è—Ç—å —Å–µ—Ç–∫—É */}
                  <div className="flex-1" />
                </div>
                {(expandedProjectGroups[projectName] ?? true) && projectSections.map((section) => {
                  const index = sections.indexOf(section)
                  return (
                    <TimelineRow
                      key={section.id}
                      section={section}
                      sectionIndex={index}
                      timeUnits={timeUnits}
                      theme={theme}
                      rowHeight={ROW_HEIGHT}
                      headerHeight={HEADER_HEIGHT}
                      columnWidth={COLUMN_WIDTHS.section}
                      padding={PADDING}
                      leftOffset={LEFT_OFFSET}
                      cellWidth={cellWidth}
                      stickyColumnShadow={stickyColumnShadow}
                      totalExpandedSections={totalExpandedSections}
                      totalLoadingsBeforeSection={loadingsBeforeSection[index] || 0}
                      onOpenSectionPanel={onOpenSectionPanel}
                    />
                  )
                })}
              </div>
            ))
          ))}

          {/* –ï—Å–ª–∏ –Ω–µ—Ç —Ä–∞–∑–¥–µ–ª–æ–≤ –∏–ª–∏ –∏–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞ */}
          {showSections && sections.length === 0 && !isLoading && (
            <div
              className={cn(
                "flex justify-start items-center p-8 border-b",
                theme === "dark" ? "border-slate-700 bg-slate-800" : "border-slate-200 bg-white",
              )}
            >
              <p className={cn("text-sm", theme === "dark" ? "text-slate-400" : "text-slate-500")}>
                {hasActiveFilters ? "–ù–µ—Ç —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏" : "–†–∞–∑–¥–µ–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"}
              </p>
            </div>
          )}

          {/* –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –º–µ–∂–¥—É —Ä–∞–∑–¥–µ–ª–∞–º–∏ –∏ –æ—Ç–¥–µ–ª–∞–º–∏, –µ—Å–ª–∏ –ø–æ–∫–∞–∑–∞–Ω—ã –∏ —Ä–∞–∑–¥–µ–ª—ã, –∏ –æ—Ç–¥–µ–ª—ã */}
          {showSections && showDepartments && sections.length > 0 && departments.length > 0 && (
            <div
              className={cn(
                "relative border-b", // –£–±–∏—Ä–∞–µ–º padding
                theme === "dark" ? "bg-slate-800 border-slate-700" : "bg-white border-slate-200",
              )}
              style={{ height: `${DIVIDER_HEIGHT}px` }} // –Ø–≤–Ω–æ –∑–∞–¥–∞–µ–º –≤—ã—Å–æ—Ç—É —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è
            >
              {/* –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –Ω–∞–¥–ø–∏—Å–∏ –Ω–∞ –≤—Å—é –≤—ã—Å–æ—Ç—É */}
              <div
                className={cn(
                  "sticky left-0 top-0 bottom-0 py-1 px-2 font-medium z-30 flex items-center",
                  theme === "dark" ? "bg-slate-800 border-b border-slate-700" : "bg-white border-b border-slate-200",
                )}
                style={{
                  width: `${totalFixedWidth}px`,
                  height: "32px",
                }}
              >
                <div className="flex items-center h-full">
                  <span className={cn("font-semibold", theme === "dark" ? "text-slate-200" : "text-slate-800")}>
                    –û—Ç–¥–µ–ª—ã –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏
                  </span>
                </div>
              </div>

              {/* –ü—É—Å—Ç–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã */}
              <div className="flex items-center justify-between h-full opacity-0">
                <div className="flex items-center">
                  <span className="font-semibold">–û—Ç–¥–µ–ª—ã –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏</span>
                </div>
              </div>
            </div>
          )}

          {/* –°—Ç—Ä–æ–∫–∏ —Å –æ—Ç–¥–µ–ª–∞–º–∏, –µ—Å–ª–∏ –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–∫–∞–∑–∞–Ω—ã */}
          {showDepartments &&
            departments.map((department, index) => (
              <DepartmentRow
                key={department.id}
                department={department}
                departmentIndex={index}
                timeUnits={timeUnits}
                theme={theme}
                rowHeight={ROW_HEIGHT}
                headerHeight={HEADER_HEIGHT}
                columnWidth={COLUMN_WIDTHS.section}
                padding={PADDING}
                leftOffset={LEFT_OFFSET}
                cellWidth={cellWidth}
                stickyColumnShadow={stickyColumnShadow}
                totalExpandedDepartments={totalExpandedDepartments}
                totalEmployeesBeforeDepartment={employeesBeforeDepartment[index] || 0}
              />
            ))}
        </div>
      </div>
    </div>
  )
}
