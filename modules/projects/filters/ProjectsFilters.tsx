import React, { useEffect } from 'react'
import { X, ChevronDown, ChevronRight, Filter, RotateCcw, Eye, EyeOff, Expand, Minimize } from 'lucide-react'
import { cn } from '@/lib/utils'
import { useFilterStore } from './store'
import { FilterSelect } from './FilterSelect'
import { OrganizationFilters } from './OrganizationFilters'
import { projectsConfig } from './configs'
import { useSettingsStore } from '@/stores/useSettingsStore'
import { useTheme } from 'next-themes'
import { SyncButton } from '@/components/ui/sync-button'

interface ProjectsFiltersProps {
  onProjectChange: (projectId: string | null) => void
  onDepartmentChange: (departmentId: string | null) => void
  onTeamChange: (teamId: string | null) => void
  onEmployeeChange: (employeeId: string | null) => void
  onManagerChange: (managerId: string | null) => void
  onStageChange?: (stageId: string | null) => void
  onObjectChange?: (objectId: string | null) => void
  onResetFilters: () => void
}

export function ProjectsFilters({
  onProjectChange,
  onDepartmentChange,
  onTeamChange,
  onEmployeeChange,
  onManagerChange,
  onStageChange,
  onObjectChange,
  onResetFilters
}: ProjectsFiltersProps) {
  const { theme: systemTheme } = useTheme()
  const { theme: settingsTheme } = useSettingsStore()
  const theme = (settingsTheme === 'system' ? systemTheme : settingsTheme) as 'light' | 'dark'
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–≤–µ—Ä–Ω—É—Ç–æ—Å—Ç–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const [isCollapsed, setIsCollapsed] = React.useState(false)

  const {
    managers,
    projects,
    stages,
    objects,
    departments,
    teams,
    employees,
    selectedManagerId,
    selectedProjectId,
    selectedStageId,
    selectedObjectId,
    selectedDepartmentId,
    selectedTeamId,
    selectedEmployeeId,
    isLoading,
    isLoadingProjects,
    isLoadingStages,
    isLoadingObjects,
    initialize,
    setFilter,
    resetFilters,
    isFilterLocked,
    getFilteredProjects,
    getFilteredStages,
    getFilteredObjects,
    getFilteredEmployees
  } = useFilterStore()

  useEffect(() => {
    console.log('üéØ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ProjectsFilters...')
    initialize(projectsConfig)
  }, [initialize])

  // –õ–æ–≥–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
  useEffect(() => {
    console.log('üë• –ú–µ–Ω–µ–¥–∂–µ—Ä—ã –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ:', managers)
  }, [managers])

  useEffect(() => {
    onProjectChange(selectedProjectId)
  }, [selectedProjectId, onProjectChange])

  useEffect(() => {
    onDepartmentChange(selectedDepartmentId)
  }, [selectedDepartmentId, onDepartmentChange])

  useEffect(() => {
    onTeamChange(selectedTeamId)
  }, [selectedTeamId, onTeamChange])

  useEffect(() => {
    onEmployeeChange(selectedEmployeeId)
  }, [selectedEmployeeId, onEmployeeChange])

  useEffect(() => {
    if (onStageChange) {
      onStageChange(selectedStageId)
    }
  }, [selectedStageId, onStageChange])

  useEffect(() => {
    if (onObjectChange) {
      onObjectChange(selectedObjectId)
    }
  }, [selectedObjectId, onObjectChange])

  const handleReset = () => {
    resetFilters()
    onResetFilters()
  }

  const filteredProjects = getFilteredProjects()
  const filteredStages = getFilteredStages()
  const filteredObjects = getFilteredObjects()
  const filteredEmployees = getFilteredEmployees()

  const hasActiveFilters = !!(
    selectedManagerId || 
    selectedProjectId || 
    selectedStageId || 
    selectedObjectId ||
    selectedDepartmentId || 
    selectedTeamId ||
    selectedEmployeeId
  )

  // –ü–æ–¥—Å—á—ë—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const activeFiltersCount = [
    selectedManagerId,
    selectedProjectId,
    selectedStageId,
    selectedObjectId,
    selectedDepartmentId,
    selectedTeamId,
    selectedEmployeeId
  ].filter(Boolean).length

  return (
    <div className={cn(
      "rounded-lg border p-4 space-y-3",
      theme === 'dark' 
        ? "bg-slate-800/50 border-slate-700" 
        : "bg-white border-slate-200"
    )}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –∫–Ω–æ–ø–∫–∏ */}
      <div className="flex items-center justify-between">
        <div className="flex items-center gap-2">
          <button
            onClick={() => setIsCollapsed(!isCollapsed)}
            className={cn(
              "flex items-center gap-2 p-1 rounded-md transition-colors",
              theme === 'dark' 
                ? "hover:bg-slate-700 text-slate-300" 
                : "hover:bg-slate-100 text-slate-700"
            )}
          >
            {isCollapsed ? <ChevronRight size={16} /> : <ChevronDown size={16} />}
            <Filter size={16} className={theme === 'dark' ? "text-teal-400" : "text-teal-600"} />
            <span className={cn(
              "text-sm font-medium",
              theme === 'dark' ? "text-white" : "text-slate-900"
            )}>
              –§–∏–ª—å—Ç—Ä—ã
            </span>
            {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤ –≤ —Å–≤—ë—Ä–Ω—É—Ç–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ */}
            {isCollapsed && hasActiveFilters && (
              <div className={cn(
                "flex items-center justify-center min-w-[18px] h-[18px] rounded-full text-xs font-medium ml-2",
                theme === 'dark' 
                  ? "bg-teal-500 text-white" 
                  : "bg-teal-500 text-white"
              )}>
                {activeFiltersCount}
              </div>
            )}
          </button>
          
          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∞–≤–∞—Ö –¥–æ—Å—Ç—É–ø–∞ */}
          {!isCollapsed && (
            <div className={cn(
              "text-xs px-2 py-1 rounded-md",
              theme === 'dark' 
                ? "bg-slate-700/50 text-slate-400 border border-slate-600/50" 
                : "bg-slate-100 text-slate-600 border border-slate-200"
            )}>
              üîí –§–∏–ª—å—Ç—Ä—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—é—Ç—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
            </div>
          )}
        </div>
        
        <div className="flex items-center gap-2">
          {/* –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ */}
          {hasActiveFilters && (
            <button
              onClick={handleReset}
              className={cn(
                "flex items-center gap-1 px-2 py-1 text-xs rounded-md",
                theme === 'dark'
                  ? "bg-slate-700 text-slate-300 hover:bg-slate-600"
                  : "bg-slate-100 text-slate-700 hover:bg-slate-200"
              )}
            >
              <RotateCcw size={12} />
              –°–±—Ä–æ—Å–∏—Ç—å
            </button>
          )}
        </div>
      </div>

      {/* –§–∏–ª—å—Ç—Ä—ã –≤ –¥–≤–µ —Å—Ç—Ä–æ–∫–∏ */}
      {!isCollapsed && (
        <div className="space-y-3">
          {/* –ü—Ä–æ–µ–∫—Ç–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã */}
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-3">
            <div className="space-y-2">
              <FilterSelect
                id="manager"
                label="–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞"
                value={selectedManagerId}
                onChange={(value) => setFilter('manager', value)}
                disabled={isLoading}
                locked={isFilterLocked('manager')}
                options={managers}
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è –ø—Ä–æ–µ–∫—Ç–∞"
                theme={theme}
                loading={isLoading}
              />
              {isFilterLocked('manager') && (
                <p className={cn(
                  "text-xs px-2 py-1 rounded",
                  theme === 'dark' 
                    ? "bg-amber-900/20 text-amber-300 border border-amber-700/30" 
                    : "bg-amber-50 text-amber-700 border border-amber-200"
                )}>
                  üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ: –≤—ã –º–æ–∂–µ—Ç–µ –≤–∏–¥–µ—Ç—å —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã
                </p>
              )}
            </div>

            <div className="space-y-2">
              <FilterSelect
                id="project"
                label="–ü—Ä–æ–µ–∫—Ç"
                value={selectedProjectId}
                onChange={(value) => setFilter('project', value)}
                disabled={isLoading || isLoadingProjects}
                locked={isFilterLocked('project')}
                options={filteredProjects}
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç"
                theme={theme}
                loading={isLoadingProjects}
              />
              {isFilterLocked('project') && (
                <p className={cn(
                  "text-xs px-2 py-1 rounded",
                  theme === 'dark' 
                    ? "bg-amber-900/20 text-amber-300 border border-amber-700/30" 
                    : "bg-amber-50 text-amber-700 border border-amber-200"
                )}>
                  üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ: –ø—Ä–æ–µ–∫—Ç –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –ø—Ä–∞–≤
                </p>
              )}
            </div>

            <div className="space-y-2">
              <FilterSelect
                id="stage"
                label="–°—Ç–∞–¥–∏—è"
                value={selectedStageId}
                onChange={(value) => setFilter('stage', value)}
                disabled={!selectedProjectId || isLoadingStages}
                locked={isFilterLocked('stage')}
                options={filteredStages}
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞–¥–∏—é"
                theme={theme}
                loading={isLoadingStages}
              />
              {isFilterLocked('stage') && (
                <p className={cn(
                  "text-xs px-2 py-1 rounded",
                  theme === 'dark' 
                    ? "bg-amber-900/20 text-amber-300 border border-amber-700/30" 
                    : "bg-amber-50 text-amber-700 border border-amber-200"
                )}>
                  üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ: —Å—Ç–∞–¥–∏—è –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
                </p>
              )}
            </div>

            <div className="space-y-2">
              <FilterSelect
                id="object"
                label="–û–±—ä–µ–∫—Ç"
                value={selectedObjectId}
                onChange={(value) => setFilter('object', value)}
                disabled={!selectedProjectId || isLoadingObjects}
                locked={isFilterLocked('object')}
                options={filteredObjects}
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä–µ–∫—Ç"
                theme={theme}
                loading={isLoadingObjects}
              />
              {isFilterLocked('object') && (
                <p className={cn(
                  "text-xs px-2 py-1 rounded",
                  theme === 'dark' 
                    ? "bg-amber-900/20 text-amber-300 border border-amber-700/30" 
                    : "bg-amber-50 text-amber-700 border border-amber-200"
                )}>
                  üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ: –æ–±—ä–µ–∫—Ç –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç–∞–¥–∏–∏
                </p>
              )}
            </div>
          </div>

          {/* –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã */}
          <OrganizationFilters
            departments={departments}
            teams={teams}
            employees={employees}
            selectedDepartmentId={selectedDepartmentId}
            selectedTeamId={selectedTeamId}
            selectedEmployeeId={selectedEmployeeId}
            isLoading={isLoading}
            setFilter={setFilter}
            isFilterLocked={isFilterLocked}
            theme={theme}
          />
        </div>
      )}
    </div>
  )
} 