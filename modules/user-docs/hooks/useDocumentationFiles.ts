"use client"

import { useState, useEffect } from 'react'
import * as Sentry from "@sentry/nextjs"
import { DocumentationFile } from '../types'
import FlexSearch from 'flexsearch'

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
interface SearchResult {
  file: DocumentationFile
  score: number
  excerpt?: string
}

// –ù–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–µ—Ä–µ–≤–∞ –ø–æ –æ—Å–Ω–æ–≤–Ω—ã–º –º–æ–¥—É–ª—è–º —Å–∏—Å—Ç–µ–º—ã
const mockDocumentationStructure: DocumentationFile[] = [
  { name: '–ú–æ—è —Ä–∞–±–æ—Ç–∞', path: 'my-work', type: 'folder', children: [
    { name: '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞', path: 'my-work/glavnaya-stranitsa.md', type: 'file' },
  ]},
  { name: '–ü—Ä–æ–µ–∫—Ç—ã', path: 'projects', type: 'folder', children: [
    { name: '–ü—Ä–æ–µ–∫—Ç—ã', path: 'projects/proekty.md', type: 'file' },
    { name: '–î–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏–∏', path: 'projects/dekompozicii.md', type: 'file' },
    { name: '–ó–∞–¥–∞–Ω–∏—è', path: 'projects/zadaniya.md', type: 'file' },
    { name: '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏', path: 'projects/kommentarii.md', type: 'file' },
  ]},
  { name: '–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ', path: 'planirovanie', type: 'folder', children: [
    { name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', path: 'planirovanie/polzovateli.md', type: 'file' },
    { name: '–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–∏', path: 'planirovanie/rukovoditeli.md', type: 'file' },
  ]},
]

export function useDocumentationFiles() {
  const [files] = useState<DocumentationFile[]>(mockDocumentationStructure)
  const [selectedFile, setSelectedFile] = useState<string | null>('my-work/glavnaya-stranitsa.md')
  const [expandedFolders, setExpandedFolders] = useState<Set<string>>(new Set(['my-work', 'projects']))
  const [searchQuery, setSearchQuery] = useState<string>('')
  
  // FlexSearch —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const [searchIndex, setSearchIndex] = useState<any | null>(null)
  const [contentCache, setContentCache] = useState<Map<string, string>>(new Map())
  const [searchResults, setSearchResults] = useState<SearchResult[]>([])
  const [isIndexing, setIsIndexing] = useState(false)

  const toggleFolder = (path: string) => {
    const newExpanded = new Set(expandedFolders)
    if (newExpanded.has(path)) {
      newExpanded.delete(path)
    } else {
      newExpanded.add(path)
    }
    setExpandedFolders(newExpanded)
  }

  const selectFile = (path: string) => {
    setSelectedFile(path)
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –∏–∑ –¥–µ—Ä–µ–≤–∞
  const getAllFiles = (files: DocumentationFile[]): DocumentationFile[] => {
    let allFiles: DocumentationFile[] = []
    
    for (const file of files) {
      if (file.type === 'file') {
        allFiles.push(file)
      } else if (file.type === 'folder' && file.children) {
        allFiles = allFiles.concat(getAllFiles(file.children))
      }
    }
    
    return allFiles
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞
  const buildSearchIndex = async () => {
    setIsIndexing(true)
    
    try {
      // –°–æ–∑–¥–∞–µ–º FlexSearch –∏–Ω–¥–µ–∫—Å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
      const index = new FlexSearch.Index({
        tokenize: "reverse",
        resolution: 3
      })

      const allFiles = getAllFiles(mockDocumentationStructure)
      const newContentCache = new Map<string, string>()

      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –∏–Ω–¥–µ–∫—Å–∏—Ä—É–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
      for (const file of allFiles) {
        try {
          const content = await getFileContent(file.path)
          newContentCache.set(file.path, content)
          
          // –ò–Ω–¥–µ–∫—Å–∏—Ä—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ + —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
          const searchText = `${file.name} ${content}`
          index.add(file.path, searchText)
        } catch (error) {
          console.warn(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª ${file.path}:`, error)
          Sentry.captureException(error, { tags: { module: 'user-docs', hook: 'useDocumentationFiles', action: 'load_file', error_type: 'unexpected' }, extra: { path: file.path } })
        }
      }

      setContentCache(newContentCache)
      setSearchIndex(index)
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞:', error)
      Sentry.captureException(error, { tags: { module: 'user-docs', hook: 'useDocumentationFiles', action: 'build_index', error_type: 'unexpected' } })
    } finally {
      setIsIndexing(false)
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ —Å FlexSearch
  const performSearch = (query: string): SearchResult[] => {
    if (!searchIndex || !query.trim()) {
      return []
    }

    try {
      const results = searchIndex.search(query, {
        limit: 20,
        suggest: true
      })

      const allFiles = getAllFiles(mockDocumentationStructure)
      const fileMap = new Map(allFiles.map(file => [file.path, file]))

      return results.map((id: string) => {
        const file = fileMap.get(id)
        const content = contentCache.get(id) || ''
        
        // –°–æ–∑–¥–∞–µ–º excerpt –≤–æ–∫—Ä—É–≥ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞
        const excerpt = createExcerpt(content, query)
        
        return {
          file: file!,
          score: 1, // FlexSearch –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç score –≤ –ø—Ä–æ—Å—Ç–æ–º —Ä–µ–∂–∏–º–µ
          excerpt
        }
      }).filter((result: any) => result.file)
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ:', error)
      Sentry.captureException(error, { tags: { module: 'user-docs', hook: 'useDocumentationFiles', action: 'search', error_type: 'unexpected' } })
      return []
    }
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ excerpt —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –≤–æ–∫—Ä—É–≥ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞
  const createExcerpt = (content: string, query: string): string => {
    const lowerContent = content.toLowerCase()
    const lowerQuery = query.toLowerCase()
    const index = lowerContent.indexOf(lowerQuery)
    
    if (index === -1) return ''
    
    const start = Math.max(0, index - 100)
    const end = Math.min(content.length, index + query.length + 100)
    
    let excerpt = content.slice(start, end)
    if (start > 0) excerpt = '...' + excerpt
    if (end < content.length) excerpt = excerpt + '...'
    
    return excerpt
  }

  // –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å FlexSearch
  const filterFiles = (files: DocumentationFile[], query: string): DocumentationFile[] => {
    if (!query.trim()) {
      return files
    }

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã FlexSearch
    const searchResultPaths = new Set(searchResults.map(result => result.file.path))
    
    const filteredFiles: DocumentationFile[] = []
    
    for (const file of files) {
      if (file.type === 'file') {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∞–π–ª –µ—Å–ª–∏ –æ–Ω –Ω–∞–π–¥–µ–Ω –≤ –ø–æ–∏—Å–∫–µ
        if (searchResultPaths.has(file.path)) {
          filteredFiles.push(file)
        }
      } else if (file.type === 'folder' && file.children) {
        // –î–ª—è –ø–∞–ø–æ–∫ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –¥–µ—Ç–µ–π
        const filteredChildren = filterFiles(file.children, query)
        if (filteredChildren.length > 0) {
          filteredFiles.push({
            ...file,
            children: filteredChildren
          })
        }
      }
    }
    
    return filteredFiles
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
  useEffect(() => {
    if (searchQuery.trim() && searchIndex) {
      const results = performSearch(searchQuery)
      setSearchResults(results)
      
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
      if (results.length > 0) {
        setSelectedFile(results[0].file.path)
      }
    } else {
      setSearchResults([])
    }
  }, [searchQuery, searchIndex])

  // –ü–æ–ª—É—á–∞–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
  const filteredFiles = filterFiles(files, searchQuery)

  // –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    buildSearchIndex()
  }, [])

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å–∫—Ä—ã–≤–∞–µ–º –ø–∞–ø–∫–∏ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ
  const getExpandedFoldersForSearch = (files: DocumentationFile[]): Set<string> => {
    const expanded = new Set(expandedFolders)
    
    if (searchQuery.trim()) {
      const addExpandedFolders = (files: DocumentationFile[]) => {
        for (const file of files) {
          if (file.type === 'folder') {
            expanded.add(file.path)
            if (file.children) {
              addExpandedFolders(file.children)
            }
          }
        }
      }
      addExpandedFolders(filteredFiles)
    }
    
    return expanded
  }

  const currentExpandedFolders = getExpandedFoldersForSearch(filteredFiles)

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Ñ–∞–π–ª–∞
  const getFileContent = async (path: string): Promise<string> => {
    try {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª —á–µ—Ä–µ–∑ API —Ä–æ—É—Ç
      const response = await fetch(`/api/docs/${path}`)
      if (response.ok) {
        return await response.text()
      }
    } catch (error) {
      console.warn('Could not load file from API:', error)
      Sentry.captureException(error, { tags: { module: 'user-docs', hook: 'useDocumentationFiles', action: 'api_fetch', error_type: 'external_api_error' }, extra: { path } })
    }

    // Fallback –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    const fallbackContent = {
      'getting-started.md': `# –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å eneca.work

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ **eneca.work** ‚Äî —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏!

## üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

### 1. –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É
- –û—Ç–∫—Ä–æ–π—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
- –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ  
- –ù–∞–∂–º–∏—Ç–µ "–í–æ–π—Ç–∏"

### 2. –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
- üìÅ **–ü—Ä–æ–µ–∫—Ç—ã** ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –∏ –∑–∞–¥–∞—á–∞–º–∏
- üìÖ **–ö–∞–ª–µ–Ω–¥–∞—Ä—å** ‚Äî –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –∏ –≤—Å—Ç—Ä–µ—á
- üìä **–û—Ç—á—ë—Ç—ã** ‚Äî –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å

–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–∏–µ —Ñ–∞–π–ª—ã –∏–∑ –º–µ–Ω—é —Å–ª–µ–≤–∞ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏.`,

      'modules/projects.md': `# –ú–æ–¥—É–ª—å "–ü—Ä–æ–µ–∫—Ç—ã"

–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –≤ eneca.work.

## –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª **–ü—Ä–æ–µ–∫—Ç—ã**
2. –ù–∞–∂–º–∏—Ç–µ **"–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç"**
3. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è

## –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
- **–°—Ç–∞–¥–∏–∏** ‚Äî –æ—Å–Ω–æ–≤–Ω—ã–µ —ç—Ç–∞–ø—ã
- **–û–±—ä–µ–∫—Ç—ã** ‚Äî –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
- **–†–∞–∑–¥–µ–ª—ã** ‚Äî –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–æ–≤`,

      'modules/calendar.md': `# –ú–æ–¥—É–ª—å "–ö–∞–ª–µ–Ω–¥–∞—Ä—å"

–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–µ–º.

## –¢–∏–ø—ã —Å–æ–±—ã—Ç–∏–π
- –†–∞–±–æ—á–∏–µ –≤—Å—Ç—Ä–µ—á–∏
- –õ–∏—á–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è  
- –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è

## –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
1. –ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—É—é –¥–∞—Ç—É
2. –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
3. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–µ—Ç–∞–ª–∏`,

      'api/overview.md': `# API –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è

–ü—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å eneca.work.

## –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
- **URL:** https://api.eneca.work/v1
- **–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è:** JWT —Ç–æ–∫–µ–Ω—ã
- **–§–æ—Ä–º–∞—Ç:** JSON

## –û—Å–Ω–æ–≤–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
- \`GET /projects\` ‚Äî —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
- \`POST /projects\` ‚Äî —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç
- \`GET /users\` ‚Äî —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`,

      'faq.md': `# –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã

## –ó–∞–±—ã–ª –ø–∞—Ä–æ–ª—å
1. –ù–∞–∂–º–∏—Ç–µ "–ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?"
2. –í–≤–µ–¥–∏—Ç–µ email
3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É

## –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç?
1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ "–ü—Ä–æ–µ–∫—Ç—ã"
2. –ù–∞–∂–º–∏—Ç–µ "–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç"
3. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É`
    }

    return fallbackContent[path as keyof typeof fallbackContent] || `# –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è

–§–∞–π–ª: ${path}

–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –±—É–¥–µ—Ç –∑–¥–µ—Å—å.

–≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –º–æ–¥—É–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –¥–ª—è eneca.work.`
  }

  return {
    files: filteredFiles,
    selectedFile,
    expandedFolders: currentExpandedFolders,
    toggleFolder,
    selectFile,
    getFileContent,
    searchQuery,
    setSearchQuery,
    searchResults,
    isIndexing
  }
}
