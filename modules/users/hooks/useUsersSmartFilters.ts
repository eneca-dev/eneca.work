import { useEffect, useState } from "react"
import { useUserStore } from "@/stores/useUserStore"
import { useUserPermissions } from "./useUserPermissions"

interface UsersFilters {
  departments: string[] // –ù–∞–∑–≤–∞–Ω–∏—è –æ—Ç–¥–µ–ª–æ–≤  
  teams: string[]       // –ù–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥
  categories: string[]  // –ù–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  positions: string[]   // –ù–∞–∑–≤–∞–Ω–∏—è –¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π
  workLocations: string[]
  roles: string[]
}

interface SmartFiltersConfig {
  // –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –º–æ–∂–µ—Ç –∏—Ö –∏–∑–º–µ–Ω–∏—Ç—å)
  lockedFilters: {
    departments?: boolean
    teams?: boolean
    categories?: boolean
    positions?: boolean
    workLocations?: boolean
    roles?: boolean
  }
  // –ü—Ä–µ–¥–Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
  presetFilters: UsersFilters
  // –ú–æ–∂–Ω–æ –ª–∏ —Å–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
  canResetFilters: boolean
}

export function useUsersSmartFilters() {
  const userProfile = useUserStore(state => state.profile)
  const { 
    isAdmin, 
    isDepartmentHead, 
    isProjectManager, 
    isTeamLead, 
    isUser 
  } = useUserPermissions()
  
  const [config, setConfig] = useState<SmartFiltersConfig>({
    lockedFilters: {},
    presetFilters: {
      departments: [],
      teams: [],
      categories: [],
      positions: [],
      workLocations: [],
      roles: []
    },
    canResetFilters: true
  })

  useEffect(() => {
    if (!userProfile) return

    const newConfig: SmartFiltersConfig = {
      lockedFilters: {},
      presetFilters: {
        departments: [],
        teams: [],
        categories: [],
        positions: [],
        workLocations: [],
        roles: []
      },
      canResetFilters: true
    }

    // üî¥ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä - –≤–∏–¥–∏—Ç –≤—Å–µ—Ö, –Ω–∏–∫–∞–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
    if (isAdmin) {
      setConfig(newConfig)
      return
    }

    // üü† –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –æ—Ç–¥–µ–ª–∞ - –≤–∏–¥–∏—Ç —Ç–æ–ª—å–∫–æ —Å–≤–æ–π –æ—Ç–¥–µ–ª
    if (isDepartmentHead && userProfile.departmentId) {
      newConfig.lockedFilters.departments = true
      // TODO: –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å departmentId –≤ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Ç–¥–µ–ª–∞
      // newConfig.presetFilters.departments = [getDepartmentNameById(userProfile.departmentId)]
      newConfig.canResetFilters = false // –ù–µ –º–æ–∂–µ—Ç —Å–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä –æ—Ç–¥–µ–ª–∞
    }

    // üü¢ –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥—ã - –≤–∏–¥–∏—Ç —Ç–æ–ª—å–∫–æ —Å–≤–æ–π –æ—Ç–¥–µ–ª –∏ –∫–æ–º–∞–Ω–¥—É  
    if (isTeamLead && userProfile.departmentId && userProfile.teamId) {
      newConfig.lockedFilters.departments = true
      newConfig.lockedFilters.teams = true
      // TODO: –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å ID –≤ –Ω–∞–∑–≤–∞–Ω–∏—è
      // newConfig.presetFilters.departments = [getDepartmentNameById(userProfile.departmentId)]
      // newConfig.presetFilters.teams = [getTeamNameById(userProfile.teamId)]
      newConfig.canResetFilters = false // –ù–µ –º–æ–∂–µ—Ç —Å–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
    }

    // üîµ –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞ - –ø–æ–∫–∞ –≤–∏–¥–∏—Ç –≤—Å–µ—Ö (–≤ –±—É–¥—É—â–µ–º –æ–≥—Ä–∞–Ω–∏—á–∏–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤)
    if (isProjectManager) {
      // TODO: –î–æ–±–∞–≤–∏—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –ø—Ä–æ–µ–∫—Ç–æ–≤
      // newConfig.presetFilters.projects = getUserManagedProjects()
    }

    // üî∑ –û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –≤–∏–¥–∏—Ç –≤—Å–µ—Ö (–∏–ª–∏ –≤ –±—É–¥—É—â–µ–º —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏—Ö –∫–æ–ª–ª–µ–≥)
    if (isUser) {
      // TODO: –í–æ–∑–º–æ–∂–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—å—é —Ç–æ–ª—å–∫–æ —Å–≤–æ–µ–≥–æ –æ—Ç–¥–µ–ª–∞ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    }

    setConfig(newConfig)
  }, [userProfile, isAdmin, isDepartmentHead, isProjectManager, isTeamLead, isUser])

  // –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ª–∏ —Ñ–∏–ª—å—Ç—Ä
  const isFilterLocked = (filterType: keyof UsersFilters): boolean => {
    return config.lockedFilters[filterType] ?? false
  }

  // –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–µ–¥–Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞
  const getPresetValue = (filterType: keyof UsersFilters): string[] => {
    return config.presetFilters[filterType] ?? []
  }

  // –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–æ–∂–Ω–æ –ª–∏ —Å–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
  const canResetFilters = (): boolean => {
    return config.canResetFilters
  }

  // –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ—á–µ–º—É —Ñ–∏–ª—å—Ç—Ä –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω
  const getFilterLockReason = (filterType: keyof UsersFilters): string | null => {
    if (!isFilterLocked(filterType)) return null

    if (isDepartmentHead && filterType === 'departments') {
      return '–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –æ—Ç–¥–µ–ª–∞ –≤–∏–¥–∏—Ç —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–≤–æ–µ–≥–æ –æ—Ç–¥–µ–ª–∞'
    }

    if (isTeamLead && (filterType === 'departments' || filterType === 'teams')) {
      return '–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥—ã –≤–∏–¥–∏—Ç —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–≤–æ–µ–π –∫–æ–º–∞–Ω–¥—ã'
    }

    return '–§–∏–ª—å—Ç—Ä –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —Å–æ–≥–ª–∞—Å–Ω–æ –≤–∞—à–∏–º –ø—Ä–∞–≤–∞–º –¥–æ—Å—Ç—É–ø–∞'
  }

  return {
    config,
    isFilterLocked,
    getPresetValue,
    canResetFilters,
    getFilterLockReason
  }
} 